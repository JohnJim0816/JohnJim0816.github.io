[{"authors":["admin"],"categories":null,"content":"还没想好呢\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"zh","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://johnjim0816.github.io/author/jiang-ji/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jiang-ji/","section":"authors","summary":"还没想好呢","tags":null,"title":"Jiang Ji","type":"authors"},{"authors":[],"categories":["野生技术"],"content":"为什么从Hexo转向Hugo Hexo优点很多，但缺点就是生成速度太慢。这是因为Hexo 基于 Nodejs ，有很多插件，而 Hugo 没有插件，使用自带的 Go html 模板实现。比如一般200篇左右的博文用Hexo 需要10分钟去生成静态网页，而Hugo 只需要10秒。\n快速开始 安装hugo brew install hugo  确认安装版本\nhugo version  新建站点 hugo new site blogs  这样会在当前目录下生成blog文件夹\n下载主题 cd blogs git clone add https://github.com/olOwOlo/hugo-theme-even.git theme/even  新建文章 hugo new post/test.md  本地运行 完成文章后，直接执行server命令启动\nhugo server  然后浏览器访问 http://localhost:1313/就可以看到内容\n更多主题 官网的主题：\nhttps://themes.gohugo.io/tags/documentation/\n个人觉得不错的：\n  Docsy\n超级完善的一个文档类主题， google出品，虽然不算是正式产品，特别适合做开源项目，强烈推荐。\nhttps://github.com/google/docsy\n  使用Academic主题搭建 Academic是一个特别适合搭建内容相对比较丰富的网站的主题，简洁大方，也适合作为一个稍有规模的正式网站。\n安装方式跟一般主题不太一样，但是我太喜欢，就暂停上面的快速开始，直接开始使用这个主题搭建吧。\n安装hugo brew install hugo  确认安装版本\nhugo version  安装站点(zip方式) Academic提供一个快速开始的站点模版Kickstart，[下载](https://github.com/sourcethemes/academic-kickstart/archive/master.zip) 并解压，  这一步跟快速搭建一节中的hugo new site blog是一样的性质，可以把解压后的文件夹academic-kickstart-master改名为blogs。\n除了zip之外更多方式参考 https://sourcethemes.com/academic/docs/install/\n安装主题  下载 并解压 Academic theme ，将里面的文件全部复制到上面创建的blogs/themes/academic文件夹中，注意这里已经将academic-kickstart-master改名为blogs。\n本地运行 cd到blogs目录， 执行hugo server，然后就可以在 http://localhost:1313/看到本地的默认网页。\n部署到Github Pages   在Github创建一个仓库，例如名字叫blogs，可以是私有的，这个仓库用来存放网站内容和源文件\n  再创建一个名称为\u0026lt;username\u0026gt;.github.io的仓库，\u0026lt;username\u0026gt;为GitHub用户名，这个仓库用于存放最终发布的网站内容\n  进入本地网站目录\ncd blogs    关联远程blogs仓库\ngit remote add origin git@github.com:\u0026lt;username\u0026gt;/blogs.git    将本地网站全部内容推送到远程blogs仓库\n注意(如有)先删除本地blogs目录下的public文件夹\ngit push -u origin master      创建public子模块\ngit submodule add -b master git@github.com:\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io.git public    执行hugo命令，网站静态内容就会生成到public文件夹，然后提交到远程blogs仓库，\nhugo cd public git status git add . git commit -m \u0026quot;first commit\u0026quot; git push -u orgin master    注：以上所有git操作都可以在VSCode中方便进行。\n另外更改config/_default/config.toml中的baseurl没改：\n# End your URL with a `/` trailing slash, e.g. `https://example.com/`. baseurl = \u0026quot;https://johnjim0816.github.io/\u0026quot;  Academic主题优化 可以参考 academic主题\n子主题风格 通过设置config/_default/params.toml中的theme变量更改，Academic主题提供了八种子主题，或者说风格，对应的本地文件在themes/academic/data/themes目录下。\n也可以 自定义主题，但我目前使用内置的1950s主题。\ntheme = \u0026quot;1950s\u0026quot;   使用时发现localhost主题生效，但是github pages却还是默认的绿色风格，然后发现是config/_default/config.toml中的baseurl没改：\n# End your URL with a `/` trailing slash, e.g. `https://example.com/`. baseurl = \u0026quot;https://johnjim0816.github.io/\u0026quot;   更改语言 修改config/_default/languages.toml，将对应的英文注释掉，并加上中文，暂不启用多语言版本：\n#[en] # languageCode = \u0026quot;en-us\u0026quot; [zh] languageCode = \u0026quot;zh-Hans\u0026quot;  此外修改config/_default/config.toml中的默认语言\ndefaultContentLanguage = \u0026quot;zh\u0026quot;  设置主页 Academic提供了一些默认选项，用来展示在首页的东西，包括Publications，Talks等，对应本地content/home/中的文件，如果不想展示，直接删掉或者在文件Front Matter处加入active=false，如下：\n--- active: false ---  其中个人或者作者简介对应content/home/about.md，而具体信息在content/authors/admin/_index.md中设置。\ncontact相关信息在config/_default/params.toml中\n增加目录 如果是增加顶部目录，只需要在文章内任意位置添加目录  为什么从Hexo转向Hugo 快速开始  安装hugo 新建站点 下载主题 新建文章 本地运行 更多主题   使用Academic主题搭建  安装hugo 安装站点(zip方式) 安装主题 本地运行 部署到Github Pages   Academic主题优化  子主题风格 更改语言 设置主页 增加目录   Refs  \n跟常见的[TOC]一样的效果。\n而增加侧边栏目录则需要更改single.html文件，具体参考 TOC for blog posts #1520中CharlieLeee的回答.\nRefs  浅谈我为什么从 HEXO 迁移到 HUGO\n 我为什么要从Hexo更换到Hugo\n https://gohugo.io/getting-started/quick-start/\n Academic官方文档\n hugo学习笔记\n Hugo部署到Github\n","date":1588830684,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1588830684,"objectID":"3a554b4f3511d978b627ecd1819da9a1","permalink":"https://johnjim0816.github.io/may/07/4/thursday/128/post/hugo-github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/hugo-github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/hugo-github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/","publishdate":"2020-05-07T13:51:24+08:00","relpermalink":"/may/07/4/thursday/128/post/hugo-github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/hugo-github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/hugo-github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/","section":"post","summary":"为什么从Hexo转向Hugo Hexo优点很多，但缺点就是生成","tags":["Hugo"],"title":"Hugo+github博客搭建笔记","type":"post"},{"authors":[],"categories":["野生技术"],"content":"写在前面 由于latex相关软件的编辑界面不太舒服，加上笔者钟情于VSCode，而网上没有一个简单易用的VSCode搭建教程，故有此书。\n编写latex的工具也多种多样，各有所爱，使用latex环境自带的编辑器固然无可厚非，然界面过于鄙陋，且无法实时编译预览，因而需要结合第三方文本编辑器，有结合ctex，有使用notepad++，而笔者更钟情于VSCode。VSCode的美妙无可言语，亦不多言，以下直接切入正题，如何使用VSCode编写latex，或者说搭建latex环境。\n安装Latex环境 Latex环境即Tex Live，见 参考链接1.1\n不同系统有不同的版本，并且还有完整版和简化版，这里给出全是不同系统完整版的传送门 MacTex下载链接 WIN上texlive可以现在在线安装版，也可以下载离线安装iso版本，由于网速问题，推荐下载离线iso的镜像 texlive iso清华镜像下载 texlive iso安装教程\nLaTeX Workshop 此乃VSCode插件，搜索安装即可，该插件的作用即将latex环境和第三方编辑器VSCode结合，使得在VSCode中能够调用latex环境。至于VSCode如何安装插件比较简单，可自查。\n设置settings.json(针对中文)  mac参考链接\nwin参考链接\n以上给出两个关于配置VSCode内settings.json的参考链接，实际上不管什么系统，配置都是一样的，如下： 快捷键cmd(ctrl)+shift+p输入setting打开settings.json把以下代码加入，注意在原本内容的最后一行加上英文逗号换行再复制粘贴，不然会报错\n此外如果需要支持中文路径下的文件，需要把以下内容中的%DOC%改为%DOCFILE%\u0026quot;，但此处笔者建议涉及代码方面不要用中文路径。\n\u0026quot;latex-workshop.view.pdf.viewer\u0026quot;: \u0026quot;tab\u0026quot;, \u0026quot;latex-workshop.latex.tools\u0026quot;: [ { \u0026quot;name\u0026quot;: \u0026quot;xelatex\u0026quot;, \u0026quot;command\u0026quot;: \u0026quot;xelatex\u0026quot;, \u0026quot;args\u0026quot;: [ \u0026quot;-synctex=1\u0026quot;, \u0026quot;-interaction=nonstopmode\u0026quot;, \u0026quot;-file-line-error\u0026quot;, \u0026quot;-pdf\u0026quot;, \u0026quot;%DOC%\u0026quot; ] }, { \u0026quot;name\u0026quot;: \u0026quot;latexmk\u0026quot;, \u0026quot;command\u0026quot;: \u0026quot;latexmk\u0026quot;, \u0026quot;args\u0026quot;: [ \u0026quot;-synctex=1\u0026quot;, \u0026quot;-interaction=nonstopmode\u0026quot;, \u0026quot;-file-line-error\u0026quot;, \u0026quot;-pdf\u0026quot;, \u0026quot;%DOC%\u0026quot; ] }, { \u0026quot;name\u0026quot;: \u0026quot;pdflatex\u0026quot;, \u0026quot;command\u0026quot;: \u0026quot;pdflatex\u0026quot;, \u0026quot;args\u0026quot;: [ \u0026quot;-synctex=1\u0026quot;, \u0026quot;-interaction=nonstopmode\u0026quot;, \u0026quot;-file-line-error\u0026quot;, \u0026quot;%DOC%\u0026quot; ] }, { \u0026quot;name\u0026quot;: \u0026quot;bibtex\u0026quot;, \u0026quot;command\u0026quot;: \u0026quot;bibtex\u0026quot;, \u0026quot;args\u0026quot;: [ \u0026quot;%DOCFILE%\u0026quot; ] } ], \u0026quot;latex-workshop.latex.recipes\u0026quot;: [ { \u0026quot;name\u0026quot;: \u0026quot;xelatex\u0026quot;, \u0026quot;tools\u0026quot;: [ \u0026quot;xelatex\u0026quot; ] }, { \u0026quot;name\u0026quot;: \u0026quot;pdflatex -\u0026gt; bibtex -\u0026gt; pdflatex*2\u0026quot;, \u0026quot;tools\u0026quot;: [ \u0026quot;pdflatex\u0026quot;, \u0026quot;bibtex\u0026quot;, \u0026quot;pdflatex\u0026quot;, \u0026quot;pdflatex\u0026quot; ] } ]  demo 在 英文 路径下新建一个.tex文件，输入代码如下，注意首行\\documentclass[UTF8]{ctexart} 用于支持中文\n\\documentclass[UTF8]{ctexart} \\title{你好，world!} \\author{Winston} \\date{\\today} \\begin{document} \\maketitle 你好，world！ \\end{document}  然后cmd(ctrl)+s保存编译，就会生成.aux、.pdf等文件，注意保存的过程同时也是编译的过程，然后打开右上角预览就会看到生成的pdf\n","date":1587621084,"expirydate":-62135596800,"kind":"page","lang":"zh","lastmod":1587621084,"objectID":"8b535cf6bbe4610697fb7ff4a01bcb25","permalink":"https://johnjim0816.github.io/april/23/4/thursday/114/post/vscode%E7%BC%96%E5%86%99latex/vscode%E7%BC%96%E5%86%99latex/vscode%E7%BC%96%E5%86%99latex/","publishdate":"2020-04-23T13:51:24+08:00","relpermalink":"/april/23/4/thursday/114/post/vscode%E7%BC%96%E5%86%99latex/vscode%E7%BC%96%E5%86%99latex/vscode%E7%BC%96%E5%86%99latex/","section":"post","summary":"写在前面 由于latex相关软件的编辑界面不太舒服，加上笔者钟","tags":["VSCode"],"title":"VSCode编写latex","type":"post"}]